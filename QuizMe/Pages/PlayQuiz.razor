@page "/playQuiz"
@using Models
@using QuizMe.Utility
@inject HttpClient Http
@inject NavigationManager NavManager
@inject ISoundPlayer SoundPlayer

<PageTitle>Index</PageTitle>


@if (quiz == null)
{
    <div class="container rounded" style="width: 360px; margin-left: auto; border-style:solid; border-width:3px">
        <div class="input-group mb-3" style=" top:8px; margin: auto; padding: 10px 5px 10px 5px; ">
            <input asp-for="QuizCode" class="form-control rounded" placeholder="Enter a quiz code" aria-label="Enter a quiz code">
            <div></div>
            <button class="btn btn-outline-secondary rounded" @onclick="JoinButton" style="margin: 0px 0px 0px 5px" id="button-addon2">Join</button>
        </div>
    </div>
}
else if (!startedQuiz)
{
    <div class="container rounded" style="margin-left: auto; border-style:solid; border-width:3px">
        <div class="container" style="text-align:center"> 
            <h1>@quiz.Name</h1>
            <div class="rounded" style="border-style:solid; border-width:1px "></div>
            <img src="https://i.ytimg.com/vi/k1INRDgxc5o/maxresdefault.jpg" alt="Quiz Image" style="width:80%; padding:15px">
            <p align="justify"> @quiz.Description</p>
            <button class="btn btn-secondary btn-lg" @onclick="StartQuiz" style="margin: 0px 0px 10px 5px;" id="button-addon2">Start Quiz</button>

        </div>
    </div>
}
else
{
    if (answerIndex >= 0)
    {
        <div class="container rounded" style="margin-left: auto; border-style:solid; border-width:3px">
            <div class="container" style="text-align:center">
                <h1>@currentQuestion.Body</h1>
                <img src="@currentQuestion.Image" alt="Quiz Image" style="max-height:400px; height:auto; width:auto width:80%; padding:15px">
            
                <div class="container" style="padding-bottom:20px">
                    <div class="row" style="">
                        <button class="col border" style="height:100px; @("background-color:" + (0 == currentQuestion.CorrectAnswerIndex ? "green": (answerIndex == 0 ? "red" : "") ))">
                            <h2> @currentQuestion.Answers[0] </h2>
                            @if (currentQuestion.CorrectAnswerIndex == 0)
                            {
                                <span class="oi oi-check" style="color:white; margin:auto margin-right:0"></span>
                            }
                            else
                            {
                                if (answerIndex == 0)
                                {
                                    <span class="oi oi-x" style="color:white; margin:auto margin-right:0"></span>
                                }
                            }

                        </button>
                        <button class="col border" style="height:100px; @("background-color:" + (1 == currentQuestion.CorrectAnswerIndex ? "green": (answerIndex == 1 ? "red" : "") ))">
                            <h2> @currentQuestion.Answers[1] </h2>
                            @if (currentQuestion.CorrectAnswerIndex == 1)
                            {
                                <span class="oi oi-check" style="color:white; margin:auto margin-right:0"></span>
                            }
                            else
                            {
                                if (answerIndex == 1)
                                {
                                    <span class="oi oi-x" style="color:white; margin:auto margin-right:0"></span>
                                }
                            }
                        </button>                    
                        <div class="w-100"></div>
                        <button class="col border" style="height:100px; @("background-color:" + (2 == currentQuestion.CorrectAnswerIndex ? "green": (answerIndex == 2 ? "red" : "") ))">
                            <h2> @currentQuestion.Answers[2] </h2>
                            @if (currentQuestion.CorrectAnswerIndex == 2)
                            {
                                <span class="oi oi-check" style="color:white; margin:auto margin-right:0"></span>
                            }
                            else
                            {
                                if (answerIndex == 2)
                                {
                                    <span class="oi oi-x" style="color:white; margin:auto margin-right:0"></span>
                                }
                            }
                        </button>
                        <button class="col border" style="height:100px; @("background-color:" + (3 == currentQuestion.CorrectAnswerIndex ? "green": (answerIndex == 3 ? "red" : "") ))">
                            <h2> @currentQuestion.Answers[3] </h2>
                            @if (currentQuestion.CorrectAnswerIndex == 3)
                            {
                                <span class="oi oi-check" style="color:white; margin:auto margin-right:0"></span>
                            }
                            else
                            {
                                if (answerIndex == 3)
                                {
                                    <span class="oi oi-x" style="color:white; margin:auto margin-right:0"></span>
                                }
                            }
                        </button>
                    </div>

                </div>
        
            </div>
        </div>
    }
    else
    {

    <div class="container rounded" style="margin-left: auto; border-style:solid; border-width:3px">
        <div class="container" style="text-align:center">
            <h1>@currentQuestion.Body</h1>
            <img src="@currentQuestion.Image" alt="Quiz Image" style="max-height:400px; height:auto; width:auto width:80%; padding:15px">
            
            <div class="container" style="padding-bottom:20px">
                <div class="row" style="">
                    <button class="col border container" style="height:100px" @onclick="@(() => AnswerClicked(0))">
                        <h2> @currentQuestion.Answers[0] </h2>
                    </button>
                    <button class="col border container" style="height:100px" @onclick="@(() => AnswerClicked(1))">
                        <h2> @currentQuestion.Answers[1] </h2>
                    </button>                    
                    <div class="w-100"></div>
                    <button class="col border container" style="height:100px" @onclick="@(() => AnswerClicked(2))">
                        <h2> @currentQuestion.Answers[2] </h2>
                    </button>
                    <button class="col border container" style="height:100px" @onclick="@(() => AnswerClicked(3))">
                        <h2> @currentQuestion.Answers[3] </h2>
                    </button>
                </div>

            </div>
        
        </div>
    </div>
    }

}

@code
{
    private Quiz? quiz = null;

    private bool startedQuiz = false;

    private Question currentQuestion;

    private int currentQuestionIndex;

    private bool questionAnswered = false;
    private bool answerIsCorrect = false;
    private int answerIndex = -1;

    public void JoinButton()
    {
        List<Question> questions = new List<Question>();
        questions.Add(new Question("How many children can a chinese have?", "https://ih1.redbubble.net/image.2961457088.6670/fposter,small,wall_texture,product,750x1000.jpg", new List<string>() { "1", "3", "2", "As many as possible" }, 0));
        questions.Add(new Question("Question 2", "", new List<string>() { "A", "B", "C", "D" }, 1));
        questions.Add(new Question("Question 3", "", new List<string>() { "A", "B", "C", "D" }, 1));
        questions.Add(new Question("Question 4", "", new List<string>() { "A", "B", "C", "D" }, 1));

        quiz = new Quiz("Social credit score test", "test quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizztest quizz", questions);
        /*try
        {
        var response = await Http.GetAsync(Endpoints.TestEndpoint);

        if (response.IsSuccessStatusCode)
        {
        Console.WriteLine("Request Message Information:- \n\n" + response.RequestMessage + "\n");
        Console.WriteLine("Response Message Header \n\n" + response.Content.Headers + "\n");
        // Get the response
        var customerJsonString = await response.Content.ReadAsStringAsync();
        Console.WriteLine("Your response data is: " + customerJsonString);
        NavManager.NavigateTo("/PlayQuiz");
    }

    }
    catch(Exception e)
    {
    Console.WriteLine(e);
    }*/
    }

    public void StartQuiz()
    {
        if (quiz == null || quiz.Questions == null)
        {
            return;
        }

        answerIndex = -1;
        currentQuestion = quiz.Questions[0];
        startedQuiz = true;
    }

    public async void AnswerClicked(int answer)
    {
        answerIndex = answer;

        if (answerIndex == currentQuestion.CorrectAnswerIndex)
        {
            // NU MERGE
            await SoundPlayer.Play("rightAnswer.mp3");
        }
    }
}